// vim:ai:et:fenc=utf-8:ff=unix:sw=4:ts=4:

digraph
{
  rankdir=TB;

  edge[
  fontsize = 16
  fontcolor = "Red"
  ]

  "IS_*_REGISTER_DEFINED?" [shape=rectangle];
  "IS_*_REGISTER_A_FLAG?" [shape=diamond];
  "70_IS_P_REGISTER_DEFINED?" [shape=rectangle];
  "72_IS_P_REGISTER_DEFINED?" [shape=rectangle];
  "73_IS_P_REGISTER_DEFINED?" [shape=rectangle];
  "104_IS_T_REGISTER_DEFINED?" [shape=rectangle];
  "104_IS_S_REGISTER_DEFINED?" [shape=rectangle];
  "109_IS_T_REGISTER_DEFINED?" [shape=rectangle];
  "109_IS_S_REGISTER_DEFINED?" [shape=rectangle];
  "126_IS_T_REGISTER_DEFINED?" [shape=rectangle];
  "127_IS_T_REGISTER_DEFINED?" [shape=rectangle];
  "133_IS_T_REGISTER_DEFINED?" [shape=rectangle];
  "134_IS_T_REGISTER_DEFINED?" [shape=rectangle];
  "133_IS_P_REGISTER_DEFINED?" [shape=rectangle];
  "134_IS_P_REGISTER_DEFINED?" [shape=rectangle];
  "135_IS_T_REGISTER_DEFINED?" [shape=rectangle];
  "IS_P_CODE_0?" [shape=rectangle];
  "IS_P_CODE_100?" [shape=rectangle];
  "IS_BUILD_NAME_SPECIFIED?" [shape=rectangle];
  "RECOGNIZED_CODE" [shape=diamond];
  "EXTRA_REGISTERS_PRESENT?" [shape=diamond];
  "RECOGNIZED_CODE" -> "UNRECOGNIZED_CODE_ERROR" [label="no"];
  "RECOGNIZED_CODE" -> "EXTRA_REGISTERS_PRESENT?" [label="yes"];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=18" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=70" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=72" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=73" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=104" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=109" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=126" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=127" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=132" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=133" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=134" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "CODE=135" [label="no" weight=10];
  "EXTRA_REGISTERS_PRESENT?" -> "EXTRA_REGISTER_ERROR" [weight=10 label="yes"];
  "CODE=18" -> "PROCESS_DISABLE_AXES" [weight=15];
  "PROCESS_DISABLE_AXES" -> "DISABLE_AXES";
  "CODE=70" -> "PROCESS_DISPLAY_MESSAGE" [weight=15];
  "PROCESS_DISPLAY_MESSAGE" -> "70_IS_P_REGISTER_DEFINED?";
  "70_IS_P_REGISTER_DEFINED?" -> "DISPLAY_MESSAGE";
  "CODE=72" -> "PROCESS_PLAY_SONG" [weight=15];
  "PROCESS_PLAY_SONG" -> "72_IS_P_REGISTER_DEFINED?";
  "72_IS_P_REGISTER_DEFINED?" -> "QUEUE_SONG";
  "CODE=73" -> "PROCESS_SET_BUILD_PERCENTAGE" [weight=15];
  "PROCESS_SET_BUILD_PERCENTAGE" -> "73_IS_P_REGISTER_DEFINED?";
  "73_IS_P_REGISTER_DEFINED?" -> "SET_BUILD_PERCENTAGE";
  "SET_BUILD_PERCENTAGE" -> "IS_P_CODE_0?";
  "IS_P_CODE_0?" -> "IS_BUILD_NAME_SPECIFIED?" [label="yes"];
  "IS_BUILD_NAME_SPECIFIED?" -> "BUILD_START_NOTIFICATION" [label="yes"];
  "IS_BUILD_NAME_SPECIFIED?" -> "NO_BUILD_NAME_ERROR" [label="no"];
  "IS_P_CODE_0?" -> "IS_P_CODE_100?" [label="no"];
  "IS_P_CODE_100?" -> "SEND_BUILD_END_NOTIFICATION" [label="yes"]
  "CODE=104" -> "PROCESS_SET_TOOLHEAD_TEMPERATURE" [weight=15];
  "PROCESS_SET_TOOLHEAD_TEMPERATURE" -> "104_IS_T_REGISTER_DEFINED?";
  "104_IS_T_REGISTER_DEFINED?" -> "104_IS_S_REGISTER_DEFINED?";
  "104_IS_S_REGISTER_DEFINED?" -> "SET_TOOLHEAD_TEMPERATURE";
  "CODE=109" -> "PROCESS_SET_PLATFORM_TEMPERATURE" [weight=15];
  "PROCESS_SET_PLATFORM_TEMPERATURE" -> "109_IS_T_REGISTER_DEFINED?";
  "109_IS_T_REGISTER_DEFINED?" -> "109_IS_S_REGISTER_DEFINED?";
  "109_IS_S_REGISTER_DEFINED?" -> "SET_PLATFORM_TEMPERATURE";
  "CODE=126" -> "PROCESS_ENABLE_EXTRA_OUTPUT" [weight=15];
  "PROCESS_ENABLE_EXTRA_OUTPUT" -> "126_IS_T_REGISTER_DEFINED?";
  "126_IS_T_REGISTER_DEFINED?" -> "ENABLE_EXTRA_OUTPUT";
  "CODE=127" -> "PROCESS_DISABLE_EXTRA_OUTPUT" [weight=15];
  "PROCESS_DISABLE_EXTRA_OUTPUT" -> "127_IS_T_REGISTER_DEFINED?";
  "127_IS_T_REGISTER_DEFINED?" -> "DISABLE_EXTRA_OUTPUT";
  "CODE=132" -> "PROCESS_LOAD_POSITION" [weight=15];
  "PROCESS_LOAD_POSITION" -> "RECALL_HOME_POSITION";
  "RECALL_HOME_POSITION" -> "LOSE_POSITION";
  "CODE=133" -> "PROCESS_WAIT_FOR_TOOL_READY" [weight=15];
  "PROCESS_WAIT_FOR_TOOL_READY" -> "133_IS_P_REGISTER_DEFINED?";
  "133_IS_P_REGISTER_DEFINED?" -> "133_USE_P_REGISTER'S_TOOL_TIMEOUT" [label="yes"];
  "133_IS_P_REGISTER_DEFINED?" -> "133_USE_TOOL_TIMEOUT_IN_PROFILE" [label="yes"];
  "133_USE_P_REGISTER'S_TOOL_TIMEOUT" -> "133_IS_T_REGISTER_DEFINED?";
  "133_USE_TOOL_TIMEOUT_IN_PROFILE" -> "133_IS_T_REGISTER_DEFINED?";
  "133_IS_T_REGISTER_DEFINED?" -> "WAIT_FOR_TOOL_TIMEOUT";
  "CODE=134" -> "PROCESS_WAIT_FOR_PLATFORM_READY" [weight=15];
  "PROCESS_WAIT_FOR_PLATFORM_READY" -> "134_IS_P_REGISTER_DEFINED?";
  "134_IS_P_REGISTER_DEFINED?" -> "134_USE_P_REGISTER'S_TOOL_TIMEOUT" [label="yes"];
  "134_IS_P_REGISTER_DEFINED?" -> "134_USE_TOOL_TIMEOUT_IN_PROFILE" [label="yes"];
  "134_USE_P_REGISTER'S_TOOL_TIMEOUT" -> "134_IS_T_REGISTER_DEFINED?";
  "134_USE_TOOL_TIMEOUT_IN_PROFILE" -> "134_IS_T_REGISTER_DEFINED?";
  "134_IS_T_REGISTER_DEFINED?" -> "WAIT_FOR_PLATFORM_TIMEOUT";
  "CODE=135" -> "PROCESS_CHANGE_TOOL" [weight=15];
  "PROCESS_CHANGE_TOOL" -> "135_IS_T_REGISTER_DEFINED?"; 
  "135_IS_T_REGISTER_DEFINED?" -> "TOOL_INDEX=T";
  "TOOL_INDEX=T" -> "SEND_TOOL_CHANGE_TO_MACHINE";
  "IS_*_REGISTER_DEFINED?" -> "MISSING_REGISTER_ERROR" [label="no"];
  "IS_*_REGISTER_DEFINED?" -> "IS_*_REGISTER_A_FLAG?" [label="yes"];
  "IS_*_REGISTER_A_FLAG?" -> "INVALID_REGISTER_ERROR" [label="yes"];
  "IS_*_REGISTER_A_FLAG?" -> "*_REGISTER_CHECK_RETURN" [label="no"];
 }
