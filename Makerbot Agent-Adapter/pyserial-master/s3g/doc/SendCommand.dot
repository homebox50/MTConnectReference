// vim:ai:et:fenc=utf-8:ff=unix:sw=4:ts=4:

digraph
{
  "BUILD PACKET" -> "SET RETRY_COUNT=0";
  "SET RETRY_COUNT=0" -> "INIT DECODER";
  "INIT DECODER" -> "SET START_TIME=NOW";
  "SET START_TIME=NOW" -> "DECODER_STATE=PAYLOAD_READY?";

  "DECODER_STATE=PAYLOAD_READY?" [shape=diamond];
  "DECODER_STATE=PAYLOAD_READY?" -> "TIME>START_TIME+TIMEOUT_LENGTH?" [label="no"];
  "DECODER_STATE=PAYLOAD_READY?" -> "EVALUATE RESPONSE_CODE" [label="yes"];

  "TIME>START_TIME+TIMEOUT_LENGTH?" [shape=diamond];
  "TIME>START_TIME+TIMEOUT_LENGTH?" -> "READ BYTE" [label="no"];
  "TIME>START_TIME+TIMEOUT_LENGTH?" -> "RETRYABLE_ERROR" [label="yes"];

  "READ BYTE" -> "RECEIVED BYTE?";
  "RECEIVED BYTE?" [shape=diamond];
  "RECEIVED BYTE?" -> "TIME>START_TIME+TIMEOUT_LENGTH?" [label="no"];
  "RECEIVED BYTE?" -> "UPDATE DECODER_STATE" [label="yes"];

  "UPDATE DECODER_STATE" -> "DECODER ERROR?";
  "DECODER ERROR?" [shape=diamond];
  "DECODER ERROR?" -> "RETRYABLE_ERROR" [label="yes"];
  "DECODER ERROR?" -> "DECODER_STATE=PAYLOAD_READY?" [label="no"];

  "EVALUATE RESPONSE_CODE" -> "RESPONSE=SUCCESS?";
  "RESPONSE=SUCCESS?" [shape=diamond];
  "RESPONSE=SUCCESS?" -> "SUCCESS" [label="yes"];
  "RESPONSE=SUCCESS?" -> "RESPONSE=BUFFER_OVERFLOW?" [label="no"];
  
  "RESPONSE=BUFFER_OVERFLOW?" [shape=diamond];
  "RESPONSE=BUFFER_OVERFLOW?" -> "INIT DECODER" [label="yes"];
  "RESPONSE=BUFFER_OVERFLOW?" -> "RESPONSE=GENERIC_ERROR?" [label="no"];

  "RESPONSE=GENERIC_ERROR?" [shape=diamond];
  "RESPONSE=GENERIC_ERROR?" -> "RETRYABLE_ERROR" [label="yes"];
  "RESPONSE=GENERIC_ERROR?" -> "RESPONSE=CRC_MISMATCH_ERROR?" [label="no"];

  "RESPONSE=CRC_MISMATCH_ERROR?" [shape=diamond];
  "RESPONSE=CRC_MISMATCH_ERROR?" -> "RETRYABLE_ERROR" [label="yes"];
  "RESPONSE=CRC_MISMATCH_ERROR?" -> "FAILURE" [label="no"];

  "RETRYABLE_ERROR" -> "INCREMENT RETRY_COUNT";

  "INCREMENT RETRY_COUNT" -> "RETRY_COUNT<5?";
  "RETRY_COUNT<5?" [shape=diamond];
  "RETRY_COUNT<5?" -> "FAILURE" [label="no"];
  "RETRY_COUNT<5?" -> "INIT DECODER" [label="yes"];

}
